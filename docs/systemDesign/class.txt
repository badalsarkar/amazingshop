@startuml
class Department {
    Short id
    String name
    Set<Category> categories
    List<Product> products
    addCategory(Parameters...)
    addProduct(Parameters...)
}
class Category {
    Integer id
    String name
    Department department
    Set<Product> products
}
class Product {
    Long id
    String name
    Price listPrice
    Price currentPrice
    String featuredImage
    List<String> images
    Long qtyInStock
    List<ProductReview> productReview
    ProductRating productRating= new ProductRating
    Set<Category> productCategory
    Supplier supplier
    addProductReview(Parameters...)
    addRating(Parameters...)
    getRating():
}

class Cart {
    id
    update date
}
class Order {
    order number
    order date
    order value
    order status
}
class OrderLine {
    product id
    quantity
    unit price
    item color
    item size
    tax rate
    tax amount
    total price
}
class PaymentMethod {
    method name
    card number
    expiry date
    default payment method?
}
class Payment {
    date
    amount
}
class ShippingInfo {
    shipping date
    shipper id
}

class Shipper {
    id
    name
    address
    contact
}
class ProductReview {
    date
    review
}
class ProductRating {
    average rating
    number of rating
}
class Supplier {
    Integer id
    String name
    Address address
}
class Promotion {
    name
    start date
    end date
    discount rate
    discount amount
}
class Customer {
    name
    address
    contact
}
interface Confirmation {
    sendConfirmation()
}
class Return {
    start date
    complete date
    amount
    status
}

class RegistrationService {

}

Department "1" *-- "0..many" Category
Department "1  " *-- "0..*" Product
Product "0..*" -- "1..*" Category
Product *-- "0..*" ProductReview : contains >
Product *-- "0..*" ProductRating : contains >
Promotion "0..1*" -- "1..*" Product : applies to
Supplier "1 " <-- "0..*" Product
Confirmation <|-- RegistrationService : Implements
RegistrationService -- Customer : Used by >
Customer *-- "1" Cart
Customer "1" -- "0..many" Order : puts >
Confirmation <|-- Order : Implements <
Order *-- "1..*" OrderLine : consists of >
OrderLine --> "1" Product
Order "1" -- "0..1" ShippingInfo : has >
Order "1" -- "0..1" Payment
Order "1" -- "0..*" Return
Confirmation <|-- Return : Implements <
Return "0..*" -- "1" ShippingInfo
Payment "0..*" -- "1" PaymentMethod
ShippingInfo --> "1" Shipper
@enduml

